// TODO replace all panels widh cards -> remove css
.panel {
    background-color: $panel-bg-1;
    color: $text-color;
}

.small-label {
    font-size: 0.7rem;
    color: $text-muted-var;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    line-height: 1.1em;
    margin-bottom: 2px;
}

.sticky-header {
    position: sticky;
    top: 0;
    padding: $gutter $gutter $gutter-sm;
    background-color: rgba($body-bg, 0.97);
    z-index: 1000;
    backdrop-filter: blur(2px);
}

.text-uppercase {
    letter-spacing: 0.1em;
}

.text-emphasis {
    color: $text-emphasis-var;
}

input {
    &[type="checkbox"],
    &[type="radio"] {
        cursor: pointer;
    }
}

a.link {
    cursor: pointer;
}

@mixin check-variant($color) {
    .form-check-input {
        border-color: $color;

        &:focus {
            box-shadow: 0 0 $input-btn-focus-blur $input-btn-focus-width rgba($color, $input-btn-focus-color-opacity);
        }

        &:checked {
            background-color: $color;
            border-color: $color;
        }
    }
}

.form-switch {
    .form-check-input {
        &[disabled],
        &:disabled {
            background-image: escape-svg(
                url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><path fill='#{$text-emphasis-color}' d='M0.1-2.9c-1.7,0-3,1.3-3,3s1.3,3,3,3s3-1.3,3-3S1.8-2.9,0.1-2.9z M0.1,2.3C-1,2.3-2,1.3-2,0.1S-1-2,0.1-2 s2.1,1,2.1,2.1S1.3,2.3,0.1,2.3z'/></svg>")
            );
            cursor: not-allowed;
        }
    }
}

@each $color, $value in $theme-colors {
    .form-check-#{$color} {
        @include check-variant($value);
    }
}
@mixin check-size-variant($ratio, $name) {
    .form-check-#{$name} {
        min-height: $form-check-min-height * $ratio;
        padding-left: $form-check-padding-start * $ratio;
        margin-bottom: $form-check-margin-bottom * $ratio;

        .form-check-input {
            margin-left: $form-check-padding-start * -1 * $ratio;
            width: $form-check-input-width * $ratio;
            height: $form-check-input-width * $ratio;
            //margin-top: ($line-height-base - $form-check-input-width) * .5  * $ratio;
        }

        &.form-check-reverse {
            padding-right: $form-check-padding-start * $ratio;
            padding-left: 0;

            .form-check-input {
                margin-right: $form-check-padding-start * -1 * $ratio;
            }
        }
    }
}

@include check-size-variant(1.61, "lg");
@include check-size-variant(0.61, "sm");

.btn-xs {
    @include button-size($btn-padding-y-xs, $btn-padding-x-xs, $btn-font-size-xs, $btn-border-radius-sm);
}

.hr-title {
    display: flex;
    align-items: center;
    margin-bottom: $gutter-sm;

    h1,
    h2,
    h3,
    h4,
    h5 {
        //margin: 0 6px 1px 0;
        text-transform: uppercase;
    }

    hr {
        flex-grow: 1;
        margin: 0;
    }
}
@each $key, $value in $theme-colors {
    .bg-faded-#{$key} {
        background-color: mix($panel-bg-1, $value, 80%);
        color: mix($text-emphasis-color, $value, 30%);
    }
}

// OUTLINE

[class*=" outline-"],
[class^="outline-"] {
    padding: $gutter-xxs $gutter-xs;
    border-width: 1px;
    border-style: solid;
    border-color: $border-color;
}

@each $key, $value in $theme-colors {
    .outline-#{$key} {
        border-color: $value;
    }
}

// NODE SETS

.node-set {
    display: inline-flex;
    flex-wrap: wrap;
    padding: $gutter-xxs $gutter-xs;
    border-left: 4px solid;
    border-radius: $border-radius;

    .node-set-label {
        margin-right: $gutter-xs;

        i {
            transform: scale(1.2);
            margin-right: 0.2em;
        }

        .node-set-label-name {
            font-weight: 600;
        }
    }

    .node-set-item {
        margin: 0 $gutter-xxs;

        i {
            margin-right: 0.2em;
            display: inline-block;
        }

        .node-set-item-name {
            position: relative;
            font-weight: 800;
            color: $text-emphasis-var;
        }
    }
}

$additional-utilities: (
    // Automatic color adjustment for backckround-color utility TODO - NOT WORKING :(
    "bg-text-color":
        (
            property: color,
            class: bg,
            values: (
                primary: color-contrast($primary),
                success: color-contrast($success),
                warning: color-contrast($warning),
                danger: color-contrast($danger),
                info: color-contrast($info),
            ),
        )
);

@each $key, $utility in $additional-utilities {
    @include generate-utility($utility, null);
}

[class*=" icon-addon-"],
[class^="icon-addon-"] {
    &::before {
        clip-path: polygon(
            0 0,
            100% 0,
            100% 59%,
            95.5% 54.5%,
            88% 50.3%,
            80% 48.5%,
            71% 49.2%,
            64% 52%,
            58% 56%,
            53% 62%,
            50% 69%,
            48.8% 79%,
            50.5% 87%,
            55% 95%,
            60% 100%,
            0 100%
        );
    }
}

// DASHED NEW ITEM PLACEHOLDER
.item-new {
    background-color: transparent !important;
    border: $border-width dashed $border-color-light;
}

.item-disabled {
    filter: contrast(75%) brightness(0.75);
    mix-blend-mode: luminosity;
    cursor: progress;
}

.item-reorder {
    cursor: move;
    outline: 1px dashed $border-color;
    outline-offset: 3px;
}

// LAZY LOADING

@keyframes loadingAnimation {
    0% {
        background-position: 150% 0;
    }

    100% {
        background-position: -150% 0;
    }
}

$loading-animation-duration: 2s;

.lazy-load > * {
    color: #00000000 !important;
    background: linear-gradient(45deg, $panel-bg-2 40%, $panel-bg-3 50%, $panel-bg-2 60%), $panel-bg-2;
    background-repeat: no-repeat;
    background-size: 350% 100%;
    animation: loadingAnimation $loading-animation-duration linear infinite;
    border-radius: $border-radius;

    & > * {
        opacity: 0;
    }
}

//Tooltip
